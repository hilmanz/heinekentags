<?phpclass twitterApi extends ServiceAPI{		function beforeFilter(){		global $LOCALE,$CONFIG;				$this->loginHelper = $this->useHelper('loginHelper');				$this->twitterHelper = $this->useHelper('twitterHelper');				$this->socialMediaAPIHelper = $this->useHelper('socialMediaAPIHelper');		$this->uploadHelper = $this->useHelper('uploadHelper');		$this->assign('basedomain', $CONFIG['BASE_DOMAIN']);		$this->assign('assets_domain', $CONFIG['ASSETS_DOMAIN_WEB']); 		$this->assign('pages', strip_tags($this->_g('page')));		$this->assign('keywords', strip_tags($this->_p('q')));	}	function main(){		}				function twitters(){	global $CONFIG;			if(@isset($this->session->getSession('twitter_session','twitter')->login))			{				if(@isset($this->session->getSession('twitter_session','twitter')->token))				{									//$syncTwitter = $this->socialMediaAPIHelper->syncTwitter();					//if($syncTwitter['status']!='1')						//{						//	pr($syncTwitter);die;						//}												$getSession = $this->session->getSession('twitter_session','twitter');						$result['twitter_id'] = $getSession->twitter_id;						$result['user_token'] =$getSession->token;						$result['user_secret'] =$getSession->secret;						$result['oauth_verifier'] =$getSession->oauth_verifier;						$result['username'] =$getSession->userProfile->name;						$result['status'] =1;						$result['messages'] ='login sucsess';						pr($result);die;									}				else				{										if(!isset($_REQUEST['oauth_token']))					{						$urlConnect=$this->twitterHelper->request_login_link();						$result['urlAuthorize'] =$urlConnect['urlConnect'];						$result['status'] =2;						$result['messages'] ='authorize ';						sendRedirect("{$urlConnect['urlConnect']}");die;						//pr($result);die;											}										pr($this->twitterHelper->authorize());die;									}			}		else			{				$urllogin=$this->twitterHelper->request_login_link();				$result['urlConnect'] =$urllogin['urlConnect'];				$result['status'] =0;				$result['messages'] ='login ';								pr($result);die; 			}	}	function twittersShare()	{ 						if($this->_p('twitter_id') && $this->_p('user_token') && $this->_p('user_secret') && $this->_p('oauth_verifier') && $this->_p('username') && $this->_p('file') && $this->_p('text') && $this->_p('consumer_key') && $this->_p('consumer_secret') )				{					/*$path = $CONFIG['LOCAL_PUBLIC_ASSET']."photo/share/";					$img = false;					if (isset($_FILES['file'])&&$_FILES['file']['name']!=NULL) {						if (isset($_FILES['file'])&&$_FILES['file']['size'] <= 20000000) {							$img = $this->uploadHelper->uploadThisImage($_FILES['file'],$path);														} else {							$result['status']=0;							$result['message']='no data recieved ';							pr($result);die;						}					} else {						$result['status']=0;						$result['message']='no data recieved ';						pr($result);die;					}									if($img)					{							$filename = $img['arrImage']['filename'];						$this->Request->setParamPost('file',$basedomain.$filename);					}					else					{											$result['status']=0;						$result['message']='no data recieved ';						pr($result);die;					}*/										$result =$this->twitterHelper->update_tweet();					pr($result);die;									}			else				{					$result['status']=0;					$result['message']='no data recieved ';										pr($result);die;				}			}	function twittersSync()	{ 		if($this->_p('consumer_key') && $this->_p('consumer_secret') && $this->_p('oauth_verifier') )		{			$result = $this->socialMediaAPIHelper->syncTwitter();			pr($result);die;		}		else		{					$result['status']=0;					$result['message']='no data recieved ';										pr($result);die;		}	}	}?>